{"version":3,"sources":["URLTable.js","firebase-config.js","URLForm.js","App.js","serviceWorker.js","index.js"],"names":["URLTable","classes","this","props","console","log","rows","TableContainer","component","Paper","Table","className","table","aria-label","TableHead","TableRow","TableCell","tablecell","align","TableBody","map","row","key","URL","scope","shortURL","button","onClick","navigator","clipboard","writeText","class","Component","withStyles","theme","width","fontSize","color","background","border","cursor","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Alert","elevation","variant","URLForm","state","open","base","handleSubmit","event","a","preventDefault","length","validURLHelper","alert","firebaseUtil","handleClose","reason","setState","RegExp","test","db","firestore","collection","add","originalURL","then","docRef","id","changeRows","catch","error","push","form","autoCapitalize","autoComplete","autoCorrect","onSubmit","bind","placeholder","type","input","value","onChange","ev","target","Snackbar","autoHideDuration","onClose","severity","root","boxShadow","outline","marginLeft","paddingLeft","marginBottom","padding","borderRadius","display","position","right","marginRight","marginTop","App","window","location","pathname","substring","URLRef","doc","get","docSnapshot","exists","onSnapshot","data","includes","href","Grid","container","spacing","direction","alignItems","justify","style","minHeight","minWidth","item","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a042269c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nconst styles = (theme) => ({\n    table: {\n        width: '700px',\n        fontSize: '16px'\n    },\n    tablecell: {\n        fontSize: '16px',\n    },\n    button: {\n        fontSize: '20px',\n        color: '#4285f4',\n        background: 'transparent',\n        border: 'None',\n        cursor: 'pointer'\n    }\n});\n\nclass URLTable extends Component {\n\n    render() {\n        const { classes } = this.props;\n        console.log(this.props.rows, typeof(this.props.rows))\n        return (\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell className={classes.tablecell}>\n                                Original URL\n                            </TableCell>\n                            <TableCell align=\"left\" className={classes.tablecell}>\n                                Shortened URL\n                            </TableCell>\n                            <TableCell align=\"right\" className={classes.tablecell}>\n                                Copy\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.props.rows.map((row) => (\n                            <TableRow key={row.URL} >\n                                <TableCell component=\"th\" scope=\"row\" className={classes.tablecell}>\n                                    {row.URL}\n                                </TableCell>\n                                <TableCell align=\"left\" className={classes.tablecell}>\n                                    {row.shortURL}\n                                </TableCell>\n                                <TableCell align=\"right\" className={classes.tablecell}>\n                                    <button className={classes.button}\n                                        onClick={()=> navigator.clipboard.writeText(row.shortURL)}>\n                                        <i class=\"copy outline icon\"></i>\n                                    </button>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        );\n    }\n}\n\n\nURLTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(URLTable);","import firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyDhm7ni5G69UYgMSiqxvRF9PJdhlco2ieY\",\n    authDomain: \"rethink-efc70.firebaseapp.com\",\n    databaseURL: \"https://rethink-efc70.firebaseio.com\",\n    projectId: \"rethink-efc70\",\n    storageBucket: \"rethink-efc70.appspot.com\",\n    messagingSenderId: \"986283696519\",\n    appId: \"1:986283696519:web:6bc699f1d9ac8bc5b03322\",\n    measurementId: \"G-SQQ87C4YE6\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(config);\n\nexport default firebase;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { withStyles } from '@material-ui/styles';\nimport URLTable from './URLTable';\nimport firebase from './firebase-config';\n\nconst styles = (theme) => ({\n    root: {\n        width: '100%',\n    },\n    input: {\n        width: '600px', \n        boxShadow: 'inset 4px 6px 10px 0 #c4c5ce, inset -4px -6px 10px 0 #fffff',\n        fontSize: '18px',\n        outline: 'None', \n        border: 'None', \n        marginLeft: '12px',\n        paddingLeft: '2px',\n        marginBottom: '2px', \n    }, \n    form: {\n        border: '1px solid transparent', \n        boxShadow: '0 4px 12px rgba(32,33,36,.28)',\n        padding: '12px', \n        borderRadius: '40px', \n        display: 'flex', \n        position: 'relative'\n    }, \n    button: {\n        fontSize: '24px', \n        color: '#4285f4',   \n        background: 'transparent', \n        border: 'None', \n        cursor: 'pointer',\n        right: '0', \n        position: 'absolute', \n        marginRight: '5px', \n        marginTop: '-2px',\n    }\n});\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass URLForm extends Component {\n\n    state = {\n        URL: '',\n        shortURL: '',\n        open: false,\n    };\n\n    rows = [];\n    base = \"https://rethink-efc70.web.app/\";\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const URL  = this.state.URL;\n\n        if (URL.length === 0) {\n            return;\n        }\n\n        if(!this.validURLHelper(URL)) {\n            alert(\"Please enter a valid URL\");\n            return;\n        }\n\n        await this.firebaseUtil(URL);\n    };\n    \n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({open: false});\n    };\n\n    validURLHelper = (URL) => {\n        var pattern = new RegExp('^(:\\\\/\\\\/)?' + // protocol\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\n        return !!pattern.test(URL);\n    }\n\n    firebaseUtil = async (URL) => {\n        const db = firebase.firestore();\n        const URLRef = db.collection('urlLookup');\n\n        URLRef.add({\n            originalURL: URL\n        })\n        .then((docRef) => {\n            const shortURL = this.base + docRef.id;\n            this.changeRows(URL, shortURL);\n            navigator.clipboard.writeText(shortURL);\n            this.setState({open: true});\n        })\n        .catch((error) => {\n            console.error(\"Error adding document: \", error);\n        });\n    }\n\n    changeRows = (URL, shortURL) => {\n       this.rows.push({'URL': URL, 'shortURL': shortURL});\n       console.log(\"Here: \", this.rows)\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <div className={classes.form}>\n                    <form \n                        autoCapitalize=\"off\" \n                        autoComplete=\"off\" \n                        autoCorrect=\"off\" \n                        onSubmit={this.handleSubmit.bind(this)}\n                    >\n                        <input\n                            placeholder=\"Paste or enter the URL\"\n                            type=\"text\"\n                            className={classes.input}\n                            value={this.state.URL}\n                            onChange={ev => this.setState({URL: ev.target.value})}\n                        />\n\n                        <button onClick={this.handleSubmit.bind(this)} className={classes.button}>\n                            <i class=\"arrow right icon\"></i>\n                        </button>\n                    </form>\n                </div>\n                <br /> <br />\n\n                <URLTable rows={this.rows} />\n\n                <Snackbar open={this.state.open} autoHideDuration={6000} onClose={this.handleClose}>\n                    <Alert onClose={this.handleClose} severity=\"success\">\n                        Short link copied to clipboard\n                    </Alert>\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nURLForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(URLForm);","import React, { Component } from 'react';\nimport './App.css';\nimport Grid  from '@material-ui/core/Grid';\nimport URLForm from './URLForm';\nimport firebase from './firebase-config';\n\nclass App extends Component {\n\n  componentDidMount() {\n    let path = window.location.pathname;\n    const shortURL = path.substring(1);\n\n    if (shortURL) {\n      let originalURL = '';\n\n      const db = firebase.firestore();\n      const URLRef = db.collection('urlLookup').doc(shortURL);\n\n      URLRef\n        .get()\n        .then(function (docSnapshot) {\n          if (docSnapshot.exists) {\n            // forward to the news page\n            URLRef.onSnapshot((doc) => {\n              originalURL = doc.data().originalURL;\n              if (originalURL.includes(\"://\")) {\n                window.location.href = originalURL;\n              } else {\n                window.location.href = \"http://\" + originalURL;\n              }\n              \n            });\n          } else {\n            // No doc exists. Ignore the path.\n          }\n        })\n        .catch(function (error) {\n          console.log(\"Error getting documents: \", error);\n        });\n    }\n  }\n\n  render() {\n    return (\n        <Grid\n          container\n          spacing={3}\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: '100vh', minWidth: '20vw' }}\n        >\n          <Grid item>\n            <h2>Rethink: Shorten URL </h2>\n          </Grid>\n          <Grid item>\n            <URLForm />\n          </Grid>\n        </Grid> \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// < !--The core Firebase JS SDK is always required and must be listed first-- >\n// <script src=\"/__/firebase/7.24.0/firebase-app.js\"></script>\n\n// <!--TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries -->\n// <script src=\"/__/firebase/7.24.0/firebase-analytics.js\"></script>\n\n// <!--Initialize Firebase-- >\n//   <script src=\"/__/firebase/init.js\"></script>"],"sourceRoot":""}